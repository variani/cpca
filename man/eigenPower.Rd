% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eigen.lib.R
\name{eigenPower}
\alias{eigenPower}
\alias{eigenPowerEigenParallel}
\alias{eigenPowerRcpp}
\alias{eigenPowerRcppEigen}
\alias{eigenPowerRcppParallel}
\title{Function eigenPower.}
\usage{
eigenPower(A, v0, tol = 1e-06, maxit = 1000, sparse = FALSE,
  sparseSymm = FALSE, ncomp = 1, verbose = 0)

eigenPowerRcpp(A, v0, tol = 1e-06, maxit = 1000, mode = 1, verbose = 0)

eigenPowerRcppEigen(A, v0, tol = 1e-06, maxit = 1000, ncomp = 1,
  symmetric = FALSE, verbose = 0)

eigenPowerRcppParallel(A, v0, tol = 1e-06, maxit = 1000, cores = -1,
  chunkSize = 1, verbose = 0)

eigenPowerEigenParallel(A, v0, tol = 1e-06, maxit = 1000, cores = -1,
  chunkSize = 1, verbose = 0)
}
\arguments{
\item{A}{A two-dimensional square matrix, either of \code{matrix} or \code{Matrix} class.}

\item{v0}{A numeric vector; the initial guess for eignevector.
If it is missing, a random vector is generated.}

\item{tol}{The tolerance threshold used to stop when reaching no improvement if estmiation of eigenvalue.
The default value is \code{1e-6}.}

\item{maxit}{The maximum number of iterations.
The default value is \code{1e4}.}

\item{sparse}{The boolean value, whether to convert the input \code{A} matrix to one of the \code{Matrix} classes.
The default value is \code{FALSE}.}

\item{sparseSymm}{The boolean value, whether to convert the input \code{A} matrix to one of the \code{Matrix} classes,
while trying to convert to a symmetric matrix type.
The default value is \code{FALSE}.}

\item{ncomp}{The number of eigenvectors to be extracted.
The default value is \code{1}.
The value of \code{0} means extract all eigenvectors.}

\item{verbose}{The integer value indicating the verbose level.
The default value is \code{0}.}

\item{symmetric}{A logical which value says explicetly if the input matrix \code{A} is symmetric.
The default value is \code{FALSE}.}

\item{cores}{The number of cores (for parallel versions).
The default value is \code{-1}.
This argument is passed next to \code{RcppParallel::setThreadOptions(numThreads = cores)}.}

\item{chunkSize}{The minimal size of a chunk (for parallel versions).
The default value is \code{1}.
This argument is passed next to a wrapper \code{eigenPower_Rcpp_Parallel}.}
}
\value{
A list several slots: \code{v} the first eigenvector; 
  \code{lambda} the first eigenvalue; etc.
}
\description{
The function implements the power algorithm for EVD.

Function eigenPowerRcpp.

Function eigenPowerRcppEigen.

Function eigenPowerRcppParallel.

Function eigenPowerEigenParallel.
}
\note{
This function is inspired by the post \url{http://blogs.sas.com/content/iml/2012/05/09/the-power-method.html}.
}
\examples{
A <- matrix(c(-261, 209, -49, 
  -530, 422, -98,
  -800, 631, -144),
  ncol = 3, nrow = 3, byrow = TRUE)
  
v0 <- c(1, 2, 3)

out <- eigenPower(A, v0, maxit = 40, verbose = 2)

out[c("lambda", "v")]
}

